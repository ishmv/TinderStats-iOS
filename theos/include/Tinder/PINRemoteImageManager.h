/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABCreateStringWithAddressDictionary.h"

#import "PINURLSessionManagerDelegate-Protocol.h"

@class NSArray, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSOperationQueue, PINCache, PINURLSessionManager;

@interface PINRemoteImageManager : _ABCreateStringWithAddressDictionary <PINURLSessionManagerDelegate>
{
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSLock *_lock;
    NSOperationQueue *_concurrentOperationQueue;
    NSOperationQueue *_urlSessionTaskQueue;
    BOOL _shouldBlurProgressive;
    BOOL _shouldUpgradeLowQualityImages;
    PINCache *_cache;
    PINURLSessionManager *_sessionManager;
    NSMutableDictionary *_tasks;
    NSMutableSet *_canceledTasks;
    NSArray *_progressThresholds;
    NSMutableArray *_taskQOS;
    float _highQualityBPSThreshold;
    float _lowQualityBPSThreshold;
    id _authenticationChallengeHandler;
    double _timeout;
    struct CGSize _maxProgressiveRenderSize;
    double _estimatedRemainingTimeThreshold;
}

+ (void)setSharedImageManagerWithConfiguration:(id)fp8;
+ (id)sharedImageManager;
+ (BOOL)supportsQOS;
- (void)setAuthenticationChallengeHandler:(id)fp(null);
- (id)authenticationChallengeHandler;
- (void)setShouldUpgradeLowQualityImages:(BOOL)fp8;
- (BOOL)shouldUpgradeLowQualityImages;
- (void)setLowQualityBPSThreshold:(float)fp8;
- (float)lowQualityBPSThreshold;
- (void)setHighQualityBPSThreshold:(float)fp8;
- (float)highQualityBPSThreshold;
- (void)setTaskQOS:(id)fp8;
- (id)taskQOS;
- (void)setUrlSessionTaskQueue:(id)fp8;
- (id)urlSessionTaskQueue;
- (void)setConcurrentOperationQueue:(id)fp8;
- (id)concurrentOperationQueue;
- (void)setCallbackQueue:(id)fp8;
- (id)callbackQueue;
- (void)setEstimatedRemainingTimeThreshold:(double)fp8;
- (double)estimatedRemainingTimeThreshold;
- (void)setMaxProgressiveRenderSize:(struct CGSize)fp8;
- (struct CGSize)maxProgressiveRenderSize;
- (void)setShouldBlurProgressive:(BOOL)fp8;
- (BOOL)shouldBlurProgressive;
- (void)setProgressThresholds:(id)fp8;
- (id)progressThresholds;
- (void)setCanceledTasks:(id)fp8;
- (id)canceledTasks;
- (void)setTasks:(id)fp8;
- (id)tasks;
- (void)setTimeout:(double)fp8;
- (double)timeout;
- (void)setSessionManager:(id)fp8;
- (id)sessionManager;
- (void)setCache:(id)fp8;
- (id)cache;
- (void).cxx_destruct;
- (id)cacheKeyForURL:(id)fp8 processorKey:(id)fp12;
- (id)downloadImageWithURLs:(id)fp8 options:(unsigned int)fp12 progressImage:(id)fp(null) completion:(void)fp16;
- (void)addTaskBPS:(float)fp8 endDate:(id)fp12;
- (float)currentBytesPerSecond;
- (void)didCompleteTask:(id)fp8 withError:(id)fp12;
- (void)didReceiveData:(id)fp8 forTask:(id)fp12;
- (void)didReceiveAuthenticationChallenge:(id)fp8 forTask:(id)fp12 completionHandler:(id)fp(null);
- (void)imageFromCacheWithCacheKey:(id)fp8 earlyCheck:(BOOL)fp12 completion:(id)fp(null);
- (void)imageFromCacheWithCacheKey:(id)fp8 completion:(id)fp(null);
- (void)setProgressImageCallback:(id)fp(null) ofTaskWithUUID:(void)fp8;
- (void)setPriority:(unsigned int)fp8 ofTaskWithUUID:(id)fp12;
- (void)cancelTaskWithUUID:(id)fp8;
- (void)prefetchImageWithURL:(id)fp8 options:(unsigned int)fp12;
- (void)prefetchImageWithURL:(id)fp8;
- (void)prefetchImagesWithURLs:(id)fp8 options:(unsigned int)fp12;
- (void)prefetchImagesWithURLs:(id)fp8;
- (id)downloadDataWithURL:(id)fp8 key:(id)fp12 priority:(unsigned int)fp16 completion:(id)fp(null);
- (id)sessionTaskWithURL:(id)fp8 key:(id)fp12 options:(unsigned int)fp16 priority:(unsigned int)fp20;
- (BOOL)handleCacheObject:(id)fp8 object:(id)fp12 uuid:(id)fp16 key:(id)fp20 options:(unsigned int)fp24 priority:(unsigned int)fp28 outImage:(id *)fp32 outAnimatedImage:(id *)fp36;
- (BOOL)earlyReturnWithOptions:(unsigned int)fp8 url:(id)fp12 object:(id)fp16 completion:(id)fp(null);
- (void)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 priority:(unsigned int)fp16 key:(id)fp20 progressImage:(id)fp(null) UUID:(void)fp24;
- (void)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 priority:(unsigned int)fp16 key:(id)fp20 processor:(id)fp(null) UUID:(void)fp24;
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 priority:(unsigned int)fp16 processorKey:(id)fp20 processor:(id)fp(null) progressImage:(void)fp24 progressDownload:(id)fp(null) completion:(void)fp28 inputUUID:(id)fp(null);
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 processorKey:(id)fp16 processor:(id)fp(null) progressDownload:(void)fp20 completion:(id)fp(null);
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 processorKey:(id)fp16 processor:(id)fp(null) completion:(void)fp20;
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 progressImage:(id)fp(null) progressDownload:(void)fp16 completion:(id)fp(null);
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 progressDownload:(id)fp(null) completion:(void)fp16;
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 progressImage:(id)fp(null) completion:(void)fp16;
- (id)downloadImageWithURL:(id)fp8 options:(unsigned int)fp12 completion:(id)fp(null);
- (id)downloadImageWithURL:(id)fp8 completion:(id)fp(null);
- (void)setShouldUpgradeLowQualityImages:(BOOL)fp8 completion:(id)fp(null);
- (void)setLowQualityBPSThreshold:(float)fp8 completion:(id)fp(null);
- (void)setHighQualityBPSThreshold:(float)fp8 completion:(id)fp(null);
- (void)setProgressiveRendersMaxProgressiveRenderSize:(struct CGSize)fp8 completion:(id)fp(null);
- (void)setProgressiveRendersShouldBlur:(BOOL)fp8 completion:(id)fp(null);
- (void)setProgressThresholds:(id)fp8 completion:(id)fp(null);
- (void)setEstimatedRemainingTimeThresholdForProgressiveDownloads:(double)fp8 completion:(id)fp(null);
- (void)setMaxNumberOfConcurrentDownloads:(int)fp8 completion:(id)fp(null);
- (void)setMaxNumberOfConcurrentOperations:(int)fp8 completion:(id)fp(null);
- (void)setAuthenticationChallenge:(id)fp(null);
- (void)unlock;
- (void)lock;
- (void)lockOnMainThread;
- (id)defaultImageCache;
- (id)initWithSessionConfiguration:(id)fp8;
- (id)init;

@end

