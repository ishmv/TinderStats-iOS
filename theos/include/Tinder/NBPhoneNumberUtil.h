/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABCreateStringWithAddressDictionary.h"

@class NSBundle, NSLock, NSMutableDictionary, NSRegularExpression;

@interface NBPhoneNumberUtil : _ABCreateStringWithAddressDictionary
{
    NSBundle *_libPhoneBundle;
    NSLock *_entireStringCacheLock;
    NSMutableDictionary *_entireStringRegexCache;
    NSLock *_lockPatternCache;
    NSMutableDictionary *_regexPatternCache;
    NSMutableDictionary *_i18nNumberFormat;
    NSMutableDictionary *_i18nPhoneNumberDesc;
    NSMutableDictionary *_i18nPhoneMetadata;
    NSRegularExpression *_PLUS_CHARS_PATTERN;
    NSRegularExpression *_CAPTURING_DIGIT_PATTERN;
    NSRegularExpression *_VALID_ALPHA_PHONE_PATTERN;
}

+ (id)sharedInstance;
- (void)setVALID_ALPHA_PHONE_PATTERN:(id)fp8;
- (id)VALID_ALPHA_PHONE_PATTERN;
- (void)setCAPTURING_DIGIT_PATTERN:(id)fp8;
- (id)CAPTURING_DIGIT_PATTERN;
- (void)setPLUS_CHARS_PATTERN:(id)fp8;
- (id)PLUS_CHARS_PATTERN;
- (void)setI18nPhoneMetadata:(id)fp8;
- (id)i18nPhoneMetadata;
- (void)setI18nPhoneNumberDesc:(id)fp8;
- (id)i18nPhoneNumberDesc;
- (void)setI18nNumberFormat:(id)fp8;
- (id)i18nNumberFormat;
- (void)setRegexPatternCache:(id)fp8;
- (id)regexPatternCache;
- (void)setLockPatternCache:(id)fp8;
- (id)lockPatternCache;
- (void)setEntireStringRegexCache:(id)fp8;
- (id)entireStringRegexCache;
- (void)setEntireStringCacheLock:(id)fp8;
- (id)entireStringCacheLock;
- (id)libPhoneBundle;
- (void).cxx_destruct;
- (BOOL)matchesEntirely:(id)fp8 string:(id)fp12;
- (BOOL)canBeInternationallyDialled:(id)fp8;
- (BOOL)canBeInternationallyDialled:(id)fp8 error:(id *)fp12;
- (BOOL)isNationalNumberSuffixOfTheOther:(id)fp8 second:(id)fp12;
- (int)isNumberMatch:(id)fp8 second:(id)fp12;
- (int)isNumberMatch:(id)fp8 second:(id)fp12 error:(id *)fp16;
- (void)buildNationalNumberForParsing:(id)fp8 nationalNumber:(id *)fp12;
- (id)parseHelper:(id)fp8 defaultRegion:(id)fp12 keepRawInput:(BOOL)fp16 checkRegion:(BOOL)fp20 error:(id *)fp24;
- (id)parseAndKeepRawInput:(id)fp8 defaultRegion:(id)fp12 error:(id *)fp16;
- (id)countryCodeByCarrier;
- (id)telephonyNetworkInfo;
- (id)parseWithPhoneCarrierRegion:(id)fp8 error:(id *)fp12;
- (id)parse:(id)fp8 defaultRegion:(id)fp12 error:(id *)fp16;
- (BOOL)checkRegionForParsing:(id)fp8 defaultRegion:(id)fp12;
- (id)maybeStripExtension:(id *)fp8;
- (BOOL)maybeStripNationalPrefixAndCarrierCode:(id *)fp8 metadata:(id)fp12 carrierCode:(id *)fp16;
- (int)maybeStripInternationalPrefixAndNormalize:(id *)fp8 possibleIddPrefix:(id)fp12;
- (BOOL)parsePrefixAsIdd:(id)fp8 sourceString:(id *)fp12;
- (id)maybeExtractCountryCode:(id)fp8 metadata:(id)fp12 nationalNumber:(id *)fp16 keepRawInput:(BOOL)fp20 phoneNumber:(id *)fp24 error:(id *)fp28;
- (id)getSupportedRegions;
- (id)extractCountryCode:(id)fp8 nationalNumber:(id *)fp12;
- (BOOL)truncateTooLongNumber:(id)fp8;
- (BOOL)isPossibleNumberString:(id)fp8 regionDialingFrom:(id)fp12 error:(id *)fp16;
- (int)isPossibleNumberWithReason:(id)fp8;
- (int)isPossibleNumberWithReason:(id)fp8 error:(id *)fp12;
- (int)testNumberLengthAgainstPattern:(id)fp8 number:(id)fp12;
- (BOOL)isPossibleNumber:(id)fp8;
- (BOOL)isPossibleNumber:(id)fp8 error:(id *)fp12;
- (BOOL)isAlphaNumber:(id)fp8;
- (BOOL)isLeadingZeroPossible:(id)fp8;
- (BOOL)isNANPACountry:(id)fp8;
- (id)getNddPrefixForRegion:(id)fp8 stripNonDigits:(BOOL)fp12;
- (id)getCountryCodeForValidRegion:(id)fp8 error:(id *)fp12;
- (id)getCountryCodeForRegion:(id)fp8;
- (id)getRegionCodesForCountryCode:(id)fp8;
- (id)getRegionCodeForCountryCode:(id)fp8;
- (id)getRegionCodeForNumberFromRegionList:(id)fp8 regionCodes:(id)fp12;
- (id)getRegionCodeForNumber:(id)fp8;
- (BOOL)isValidNumberForRegion:(id)fp8 regionCode:(id)fp12;
- (BOOL)isValidNumber:(id)fp8;
- (BOOL)isNumberMatchingDesc:(id)fp8 numberDesc:(id)fp12;
- (int)getNumberTypeHelper:(id)fp8 metadata:(id)fp12;
- (int)getNumberType:(id)fp8;
- (id)getNumberDescByType:(id)fp8 type:(int)fp12;
- (id)maybeGetFormattedExtension:(id)fp8 metadata:(id)fp12 numberFormat:(int)fp16;
- (id)getExampleNumberForNonGeoEntity:(id)fp8 error:(id *)fp12;
- (id)getExampleNumberForType:(id)fp8 type:(int)fp12 error:(id *)fp16;
- (id)getExampleNumber:(id)fp8 error:(id *)fp12;
- (id)formatNsnUsingPattern:(id)fp8 formattingPattern:(id)fp12 numberFormat:(int)fp16 carrierCode:(id)fp20;
- (id)chooseFormattingPatternForNumber:(id)fp8 nationalNumber:(id)fp12;
- (id)formatNsn:(id)fp8 metadata:(id)fp12 phoneNumberFormat:(int)fp16 carrierCode:(id)fp20;
- (id)formatOutOfCountryKeepingAlphaChars:(id)fp8 regionCallingFrom:(id)fp12;
- (id)formatOutOfCountryKeepingAlphaChars:(id)fp8 regionCallingFrom:(id)fp12 error:(id *)fp16;
- (BOOL)hasFormattingPatternForNumber:(id)fp8;
- (BOOL)hasUnexpectedItalianLeadingZero:(id)fp8;
- (BOOL)rawInputContainsNationalPrefix:(id)fp8 nationalPrefix:(id)fp12 regionCode:(id)fp16;
- (id)formatInOriginalFormat:(id)fp8 regionCallingFrom:(id)fp12;
- (id)formatInOriginalFormat:(id)fp8 regionCallingFrom:(id)fp12 error:(id *)fp16;
- (id)prefixNumberWithCountryCallingCode:(id)fp8 phoneNumberFormat:(int)fp12 formattedNationalNumber:(id)fp16 formattedExtension:(id)fp20;
- (id)formatOutOfCountryCallingNumber:(id)fp8 regionCallingFrom:(id)fp12;
- (id)formatOutOfCountryCallingNumber:(id)fp8 regionCallingFrom:(id)fp12 error:(id *)fp16;
- (id)formatNumberForMobileDialing:(id)fp8 regionCallingFrom:(id)fp12 withFormatting:(BOOL)fp16;
- (id)formatNumberForMobileDialing:(id)fp8 regionCallingFrom:(id)fp12 withFormatting:(BOOL)fp16 error:(id *)fp20;
- (id)formatNationalNumberWithPreferredCarrierCode:(id)fp8 fallbackCarrierCode:(id)fp12;
- (id)formatNationalNumberWithPreferredCarrierCode:(id)fp8 fallbackCarrierCode:(id)fp12 error:(id *)fp16;
- (id)getMetadataForRegionOrCallingCode:(id)fp8 regionCode:(id)fp12;
- (id)formatNationalNumberWithCarrierCode:(id)fp8 carrierCode:(id)fp12;
- (id)formatNationalNumberWithCarrierCode:(id)fp8 carrierCode:(id)fp12 error:(id *)fp16;
- (id)formatByPattern:(id)fp8 numberFormat:(int)fp12 userDefinedFormats:(id)fp16;
- (id)formatByPattern:(id)fp8 numberFormat:(int)fp12 userDefinedFormats:(id)fp16 error:(id *)fp20;
- (id)format:(id)fp8 numberFormat:(int)fp12;
- (id)format:(id)fp8 numberFormat:(int)fp12 error:(id *)fp16;
- (BOOL)hasValidCountryCallingCode:(id)fp8;
- (BOOL)isValidRegionCode:(id)fp8;
- (BOOL)isNumberGeographical:(id)fp8;
- (BOOL)formattingRuleHasFirstGroupOnly:(id)fp8;
- (id)normalizeHelper:(id)fp8 normalizationReplacements:(id)fp12 removeNonMatches:(BOOL)fp16;
- (int)getLengthOfNationalDestinationCode:(id)fp8;
- (int)getLengthOfNationalDestinationCode:(id)fp8 error:(id *)fp12;
- (int)getLengthOfGeographicalAreaCode:(id)fp8;
- (int)getLengthOfGeographicalAreaCode:(id)fp8 error:(id *)fp12;
- (id)convertAlphaCharactersInNumber:(id)fp8;
- (id)normalizeDigitsOnly:(id)fp8;
- (void)normalizeSB:(id *)fp8;
- (id)normalizePhoneNumber:(id)fp8;
- (BOOL)isViablePhoneNumber:(id)fp8;
- (id)extractPossibleNumber:(id)fp8;
- (void)initNormalizationMappings;
- (id)DIGIT_MAPPINGS;
- (void)initRegularExpressionSet;
- (id)init;
- (id)getNationalSignificantNumber:(id)fp8;
- (BOOL)isNaN:(id)fp8;
- (BOOL)isNumeric:(id)fp8;
- (BOOL)isAllDigits:(id)fp8;
- (id)stringByReplacingOccurrencesString:(id)fp8 withMap:(id)fp12 removeNonMatches:(BOOL)fp16;
- (BOOL)isStartingStringByRegex:(id)fp8 regex:(id)fp12;
- (id)matchedStringByRegex:(id)fp8 regex:(id)fp12;
- (id)matchesByRegex:(id)fp8 regex:(id)fp12;
- (id)matcheFirstByRegex:(id)fp8 regex:(id)fp12;
- (id)replaceStringByRegex:(id)fp8 regex:(id)fp12 withTemplate:(id)fp16;
- (id)replaceFirstStringByRegex:(id)fp8 regex:(id)fp12 withTemplate:(id)fp16;
- (int)indexOfStringByString:(id)fp8 target:(id)fp12;
- (int)stringPositionByRegex:(id)fp8 regex:(id)fp12;
- (id)componentsSeparatedByRegex:(id)fp8 regex:(id)fp12;
- (id)regularExpressionWithPattern:(id)fp8 options:(unsigned int)fp12 error:(id *)fp16;
- (id)entireRegularExpressionWithPattern:(id)fp8 options:(unsigned int)fp12 error:(id *)fp16;
- (id)errorWithObject:(id)fp8 withDomain:(id)fp12;

@end

